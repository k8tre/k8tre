apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cnpg
  namespace: argocd
spec:
  # Enable Go templating for dynamic field generation
  goTemplate: true
  # Configure template behavior - fail if a key is missing
  goTemplateOptions: ["missingkey=error"]

  # Define how applications are discovered and generated
  generators:
    - matrix:
        generators:
          - git:
              # Repository containing the application definitions
              repoURL: https://github.com/k8tre/k8tre.git
              # Use feature branch for testing
              revision: feature/vc-cnpg
              # Pattern to match directories for app discovery
              directories:
                # Matches any directory under agnostics/cnpg/envs/
                # e.g., agnostics/cnpg/envs/prod
                - path: agnostics/cnpg/envs/*
              files:
                # Create environment-specific values files that will be used to configure deployments
                - path: agnostics/cnpg/envs/{{index .path.segments 3}}/values.yaml
                  name: values
          - clusters:
              selector:
                matchLabels:
                  # This will match the environment from the path segment
                  environment: "{{index .path.segments 3}}"

  template:
    metadata:
      name: "{{index .path.segments 1}}"
      annotations:
        # ArgoCD application name
        argocd.argoproj.io/instance: "{{index .path.segments 1}}-{{index .path.segments 3}}"
        # Sync wave to control the order of application sync
        argocd.argoproj.io/sync-wave: "-10"
    spec:
      project: default
      source:
        repoURL: https://github.com/cloudnative-pg/cloudnative-pg
        # Use the targetRevision value from the environment-specific values file
        targetRevision: "{{ if (index .values).targetRevision }}{{ (index .values).targetRevision }}{{ else }}release-1.23{{ end }}"
        path: releases
        directory:
          # Use the operatorVersion value from the environment-specific values file
          include: "{{ if (index .values).operatorVersion }}{{ (index .values).operatorVersion }}{{ else }}cnpg-1.23.6.yaml{{ end }}"
      destination:
        server: "{{.server}}"
        namespace: cnpg-system
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
